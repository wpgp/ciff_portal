{
  "DensitySpec": {
    "$schema": "https://vega.github.io/schema/vega/v5.json",
    "background": "white",
    "padding": 5,
    "width": 210,
    "height": 50,
    "data": [
      {"name":"input_data", "values":[]},
      {
        "name": "data_0",
        "source": "input_data",
        "transform": [
          {"type": "formula", "expr": "datum.C_Prev_R1", "as": "R1"},
          {"type": "formula", "expr": "datum.C_Prev_R2", "as": "R2"},
          {"type": "fold", "fields": ["R1", "R2"], "as": ["Round", "Value"]},
          {
            "type": "kde",
            "field": "Value",
            "bandwidth": 2.5,
            "extent": [0, 100],
            "groupby": ["Round"],
            "as": ["value", "density"]
          }
        ]
      }
    ],
    "marks": [
      {
        "name": "pathgroup",
        "type": "group",
        "from": {
          "facet": {
            "name": "faceted_path_main",
            "data": "data_0",
            "groupby": ["Round"]
          }
        },
        "encode": {
          "update": {
            "width": {"field": {"group": "width"}},
            "height": {"field": {"group": "height"}}
          }
        },
        "marks": [
          {
            "name": "marks",
            "type": "area",
            "style": ["area"],
            "sort": {"field": "datum[\"value\"]"},
            "from": {"data": "faceted_path_main"},
            "encode": {
              "update": {
                "opacity": {"value": 0.7},
                "orient": {"value": "vertical"},
                "fill": {"scale": "color", "field": "Round"},
                "tooltip": {
                  "signal": "isValid(datum[\"Round\"]) ? datum[\"Round\"] : \"\"+datum[\"Round\"]"
                },
                "description": {
                  "signal": "\"Round: \" + (isValid(datum[\"Round\"]) ? datum[\"Round\"] : \"\"+datum[\"Round\"]) + \"; value: \" + (format(datum[\"value\"], \"\")) + \"; density: \" + (format(datum[\"density\"], \"\"))"
                },
                "x": {"scale": "x", "field": "value"},
                "y": {"scale": "y", "field": "density"},
                "y2": {"scale": "y", "value": 0},
                "defined": {
                  "signal": "isValid(datum[\"value\"]) && isFinite(+datum[\"value\"]) && isValid(datum[\"density\"]) && isFinite(+datum[\"density\"])"
                }
              }
            }
          }
        ]
      }
    ],
    "scales": [
      {
        "name": "x",
        "type": "linear",
        "domain": [0, 100],
        "range": [0, {"signal": "width"}],
        "nice": true,
        "zero": true
      },
      {
        "name": "y",
        "type": "linear",
        "domain": {"data": "data_0", "field": "density"},
        "range": [{"signal": "height"}, 0],
        "nice": true,
        "zero": true
      },
      {
        "name": "color",
        "type": "ordinal",
        "domain": {"data": "data_0", "field": "Round", "sort": true},
        "range": ["#2b2b2b", "#e90051"]
      }
    ],
    "axes": [
      {
        "scale": "x",
        "orient": "bottom",
        "grid": true,
        "tickCount": {"signal": "ceil(width/40)"},
        "labels": false,
        "aria": false,
        "maxExtent": 0,
        "minExtent": 0,
        "ticks": false,
        "zindex": 0
      },
      {
        "scale": "y",
        "orient": "left",
        "gridScale": "x",
        "grid": true,
        "tickCount": {"signal": "ceil(height/40)"},
        "domain": false,
        "labels": false,
        "aria": false,
        "maxExtent": 0,
        "minExtent": 0,
        "ticks": false,
        "zindex": 0
      }
    ]
  },

  "HistogramSpec": {
    "$schema": "https://vega.github.io/schema/vega/v5.json",
    "background": "white",
    "padding": 5,
    "width": 210,
    "height": 50,
    "data": [
      {"name": "input_data", "value": []},
      {
        "name": "data_0",
        "source": "input_data",
        "transform": [
          {"type": "formula", "expr": "datum.C_Prev_R1", "as": "R1"},
          {"type": "formula", "expr": "datum.C_Prev_R2", "as": "R2"},
          {"type": "fold", "fields": ["R1", "R2"], "as": ["Round", "Value"]},
          {
            "type": "bin",
            "field": "Value",
            "as": ["binned", "binned_end"],
            "signal": "bin_extent_0_40_step_2_5_Value_bins",
            "extent": [0, 100],
            "step": 2.5
          },
          {
            "type": "aggregate",
            "groupby": ["Round", "binned"],
            "ops": ["count"],
            "fields": [null],
            "as": ["__count"]
          },
          {
            "type": "stack",
            "groupby": ["binned"],
            "field": "__count",
            "sort": {"field": ["Round"], "order": ["descending"]},
            "as": ["__count_start", "__count_end"],
            "offset": "zero"
          },
          {
            "type": "filter",
            "expr": "isValid(datum[\"binned\"]) && isFinite(+datum[\"binned\"])"
          }
        ]
      }
    ],
    "marks": [
      {
        "name": "marks",
        "type": "rect",
        "style": ["bar"],
        "from": {"data": "data_0"},
        "encode": {
          "update": {
            "opacity": {"value": 0.7},
            "width": {"value": 5},
            "fill": {"scale": "color", "field": "Round"},
            "tooltip": {
              "signal": "isValid(datum[\"Round\"]) ? datum[\"Round\"] : \"\"+datum[\"Round\"]"
            },
            "ariaRoleDescription": {"value": "bar"},
            "description": {
              "signal": "\"Round: \" + (isValid(datum[\"Round\"]) ? datum[\"Round\"] : \"\"+datum[\"Round\"]) + \"; binned: \" + (format(datum[\"binned\"], \"\")) + \"; Count of Records: \" + (format(datum[\"__count\"], \"\"))"
            },
            "xc": {"scale": "x", "field": "binned"},
            "y": {"scale": "y", "field": "__count_end"},
            "y2": {"scale": "y", "field": "__count_start"}
          }
        }
      }
    ],
    "scales": [
      {
        "name": "x",
        "type": "linear",
        "domain": [0, 40],
        "range": [0, {"signal": "width"}],
        "nice": true,
        "zero": true,
        "padding": 5
      },
      {
        "name": "y",
        "type": "linear",
        "domain": {"data": "data_0", "fields": ["__count_start", "__count_end"]},
        "range": [{"signal": "height"}, 0],
        "nice": true,
        "zero": true
      },
      {
        "name": "color",
        "type": "ordinal",
        "domain": {"data": "data_0", "field": "Round", "sort": true},
        "range": ["#2b2b2b", "#e90051"]
      }
    ],
    "axes": [
      {
        "scale": "x",
        "orient": "bottom",
        "grid": true,
        "labelFlush": true,
        "labelOverlap": true,
        "tickCount": {"signal": "ceil(width/40)"},
        "zindex": 0
      },
      {
        "scale": "y",
        "orient": "left",
        "grid": true,
        "labelOverlap": true,
        "tickCount": {"signal": "ceil(height/40)"},
        "zindex": 0
      }
    ]
  },
  
  "BubbleSpec": {
    "$schema": "https://vega.github.io/schema/vega/v5.json",
    "background": "white",
    "padding": 5,
    "width": 250,
    "height": 40,
    "data": [
      {"name": "input_data", "values": []},
      {
        "name": "data_0",
        "source": "input_data",
        "transform": [
          {"type": "formula", "expr": "datum.LBW_R1", "as": "R1"},
          {"type": "formula", "expr": "datum.LBW_R2", "as": "R2"},
          {"type": "fold", "fields": ["R1", "R2"], "as": ["Round", "Value"]},
          {
            "type": "bin",
            "field": "Value",
            "as": [
              "bin_extent_0_100_step_2_5_Value",
              "bin_extent_0_100_step_2_5_Value_end"
            ],
            "signal": "bin_extent_0_100_step_2_5_Value_bins",
            "extent": [0, 100],
            "step": 2.5
          },
          {
            "type": "aggregate",
            "groupby": [
              "Round",
              "bin_extent_0_100_step_2_5_Value",
              "bin_extent_0_100_step_2_5_Value_end"
            ],
            "ops": ["count"],
            "fields": [null],
            "as": ["__count"]
          },
          {
            "type": "filter",
            "expr": "isValid(datum[\"bin_extent_0_100_step_2_5_Value\"]) && isFinite(+datum[\"bin_extent_0_100_step_2_5_Value\"])"
          }
        ]
      }
    ],
    "marks": [
      {
        "name": "marks",
        "type": "symbol",
        "style": ["circle"],
        "from": {"data": "data_0"},
        "encode": {
          "update": {
            "opacity": {"value": 0.4},
            "stroke": {"value": "black"},
            "strokeWidth": {"value": 1},
            "strokeOpacity": {"value": 1},
            "fill": {"scale": "color", "field": "Round"},
            "tooltip": {
              "signal": "isValid(datum[\"Round\"]) ? datum[\"Round\"] : \"\"+datum[\"Round\"]"
            },
            "ariaRoleDescription": {"value": "circle"},
            "description": {
              "signal": "\"Round: \" + (isValid(datum[\"Round\"]) ? datum[\"Round\"] : \"\"+datum[\"Round\"]) + \"; Count of Records: \" + (format(datum[\"__count\"], \"\")) + \"; Value (binned): \" + (!isValid(datum[\"bin_extent_0_100_step_2_5_Value\"]) || !isFinite(+datum[\"bin_extent_0_100_step_2_5_Value\"]) ? \"null\" : format(datum[\"bin_extent_0_100_step_2_5_Value\"], \"\") + \" â€“ \" + format(datum[\"bin_extent_0_100_step_2_5_Value_end\"], \"\"))"
            },
            "x": [
              {
                "test": "!isValid(datum[\"bin_extent_0_100_step_2_5_Value\"]) || !isFinite(+datum[\"bin_extent_0_100_step_2_5_Value\"])",
                "value": 0
              },
              {
                "signal": "scale(\"x\", 0.5 * datum[\"bin_extent_0_100_step_2_5_Value\"] + 0.5 * datum[\"bin_extent_0_100_step_2_5_Value_end\"])"
              }
            ],
            "y": {"scale": "y", "field": "Round"},
            "size": {"scale": "size", "field": "__count"},
            "shape": {"value": "circle"}
          }
        }
      }
    ],
    "scales": [
      {
        "name": "x",
        "type": "linear",
        "domain": {
          "signal": "[bin_extent_0_100_step_2_5_Value_bins.start, bin_extent_0_100_step_2_5_Value_bins.stop]"
        },
        "range": [0, {"signal": "width"}],
        "bins": {"signal": "bin_extent_0_100_step_2_5_Value_bins"},
        "zero": false
      },
      {
        "name": "y",
        "type": "point",
        "domain": {"data": "data_0", "field": "Round", "sort": true},
        "range": [0, {"signal": "height"}],
        "padding": 0.5
      },
      {
        "name": "color",
        "type": "ordinal",
        "domain": ["R1", "R2"],
        "range": ["black", "red"]
      },
      {
        "name": "size",
        "type": "linear",
        "domain": [0, 5],
        "range": [1, 50],
        "zero": true
      }
    ],
    "axes": [
      {
        "scale": "x",
        "orient": "bottom",
        "grid": false,
        "labels": true,
        "labelFlush": true,
        "labelOverlap": true,
        "tickCount": {"signal": "ceil(width/10)"},
        "zindex": 0
      },
      {"scale": "y", "orient": "left", "grid": false, "zindex": 0}
    ]
  },
  
  "TwoPoint": {
    "$schema": "https://vega.github.io/schema/vega/v5.json",
    "background": "white",
    "padding": 5,
    "width": 210,
    "data": [
      {"name":"input_data", "values":[]},
      {
        "name": "data_0",
        "source": "input_data",
        "transform": [
          {"type": "formula", "expr": "datum.C_Prev_R1", "as": "R1"},
          {"type": "formula", "expr": "datum.C_Prev_R2", "as": "R2"}
        ]
      },
      {
        "name": "data_1",
        "source": "data_0",
        "transform": [
          {"type": "fold", "fields": ["R1", "R2"], "as": ["Round", "Value"]}
        ]
      },
      {
        "name": "data_2",
        "source": "data_1",
        "transform": [
          {
            "type": "kde",
            "field": "Value",
            "bandwidth": 2.5,
            "extent": [0, 100],
            "groupby": ["Round"],
            "as": ["value", "density"]
          }
        ]
      },
      {
        "name": "data_3",
        "source": "data_1",
        "transform": [
          {
            "type": "filter",
            "expr": "isValid(datum[\"Value\"]) && isFinite(+datum[\"Value\"])"
          }
        ]
      },
      {
        "name": "data_4",
        "source": "data_0",
        "transform": [
          {
            "type": "filter",
            "expr": "isValid(datum[\"R1\"]) && isFinite(+datum[\"R1\"])"
          }
        ]
      }
    ],
    "signals": [
      {"name": "concat_0_height", "value": 50},
      {"name": "concat_1_height", "value": 300}
    ],
    "layout": {"padding": 20, "columns": 1, "bounds": "full", "align": "each"},
    "marks": [
      {
        "type": "group",
        "name": "concat_0_group",
        "style": "cell",
        "encode": {
          "update": {
            "width": {"signal": "width"},
            "height": {"signal": "concat_0_height"}
          }
        },
        "marks": [
          {
            "name": "concat_0_pathgroup",
            "type": "group",
            "from": {
              "facet": {
                "name": "faceted_path_concat_0_main",
                "data": "data_2",
                "groupby": ["Round"]
              }
            },
            "encode": {
              "update": {
                "width": {"field": {"group": "width"}},
                "height": {"field": {"group": "height"}}
              }
            },
            "marks": [
              {
                "name": "concat_0_marks",
                "type": "area",
                "style": ["area"],
                "sort": {"field": "datum[\"value\"]"},
                "from": {"data": "faceted_path_concat_0_main"},
                "encode": {
                  "update": {
                    "opacity": {"value": 0.7},
                    "orient": {"value": "vertical"},
                    "fill": {"scale": "color", "field": "Round"},
                    "tooltip": {
                      "signal": "isValid(datum[\"Round\"]) ? datum[\"Round\"] : \"\"+datum[\"Round\"]"
                    },
                    "description": {
                      "signal": "\"Round: \" + (isValid(datum[\"Round\"]) ? datum[\"Round\"] : \"\"+datum[\"Round\"]) + \"; value: \" + (format(datum[\"value\"], \"\")) + \"; density: \" + (format(datum[\"density\"], \"\"))"
                    },
                    "x": {"scale": "concat_0_x", "field": "value"},
                    "y": {"scale": "concat_0_y", "field": "density"},
                    "y2": {"scale": "concat_0_y", "value": 0},
                    "defined": {
                      "signal": "isValid(datum[\"value\"]) && isFinite(+datum[\"value\"]) && isValid(datum[\"density\"]) && isFinite(+datum[\"density\"])"
                    }
                  }
                }
              }
            ]
          }
        ],
        "axes": [
          {
            "scale": "concat_0_x",
            "orient": "bottom",
            "gridScale": "concat_0_y",
            "grid": true,
            "tickCount": {"signal": "ceil(width/40)"},
            "domain": false,
            "labels": false,
            "aria": false,
            "maxExtent": 0,
            "minExtent": 0,
            "ticks": false,
            "zindex": 0
          },
          {
            "scale": "concat_0_y",
            "orient": "left",
            "gridScale": "concat_0_x",
            "grid": true,
            "tickCount": {"signal": "ceil(concat_0_height/40)"},
            "domain": false,
            "labels": false,
            "aria": false,
            "maxExtent": 0,
            "minExtent": 0,
            "ticks": false,
            "zindex": 0
          },
          {
            "scale": "concat_0_x",
            "orient": "bottom",
            "grid": false,
            "labelFlush": true,
            "labelOverlap": true,
            "tickCount": {"signal": "ceil(width/40)"},
            "zindex": 0
          },
          {
            "scale": "concat_0_y",
            "orient": "left",
            "grid": false,
            "labelOverlap": true,
            "tickCount": {"signal": "ceil(concat_0_height/40)"},
            "zindex": 0
          }
        ]
      },
      {
        "type": "group",
        "name": "concat_1_group",
        "style": "cell",
        "encode": {
          "update": {
            "width": {"signal": "width"},
            "height": {"signal": "concat_1_height"}
          }
        },
        "marks": [
          {
            "name": "concat_1_layer_0_marks",
            "type": "rect",
            "style": ["bar"],
            "from": {"data": "data_4"},
            "encode": {
              "update": {
                "fill": {
                  "value": {
                    "gradient": "linear",
                    "stops": [
                      {"color": "#2b2b2b", "offset": 0},
                      {"color": "#e90051", "offset": 1}
                    ],
                    "x1": 0,
                    "x2": 1,
                    "y1": 1,
                    "y2": 1
                  }
                },
                "tooltip": {
                  "signal": "{\"district\": isValid(datum[\"district\"]) ? datum[\"district\"] : \"\"+datum[\"district\"], \"R1\": format(datum[\"R1\"], \".0f\"), \"R2\": format(datum[\"R2\"], \".0f\")}"
                },
                "ariaRoleDescription": {"value": "bar"},
                "description": {
                  "signal": "\"district: \" + (isValid(datum[\"district\"]) ? datum[\"district\"] : \"\"+datum[\"district\"]) + \"; R1: \" + (format(datum[\"R1\"], \".0f\")) + \"; R2: \" + (format(datum[\"R2\"], \".0f\"))"
                },
                "x": {"scale": "concat_1_x", "field": "R1"},
                "x2": {"scale": "concat_1_x", "field": "R2"},
                "yc": {"scale": "concat_1_y", "field": "district", "band": 0.5},
                "height": {"value": 2}
              }
            }
          },
          {
            "name": "concat_1_layer_1_marks",
            "type": "symbol",
            "style": ["point"],
            "from": {"data": "data_3"},
            "encode": {
              "update": {
                "opacity": {"value": 1},
                "size": {"value": 100},
                "fill": {"scale": "color", "field": "Round"},
                "tooltip": {
                  "signal": "{\"district\": isValid(datum[\"district\"]) ? datum[\"district\"] : \"\"+datum[\"district\"], \"R1\": format(datum[\"R1\"], \".0f\"), \"R2\": format(datum[\"R2\"], \".0f\")}"
                },
                "ariaRoleDescription": {"value": "point"},
                "description": {
                  "signal": "\"Round: \" + (isValid(datum[\"Round\"]) ? datum[\"Round\"] : \"\"+datum[\"Round\"]) + \"; district: \" + (isValid(datum[\"district\"]) ? datum[\"district\"] : \"\"+datum[\"district\"]) + \"; R1: \" + (format(datum[\"R1\"], \".0f\")) + \"; R2: \" + (format(datum[\"R2\"], \".0f\")) + \"; Value: \" + (format(datum[\"Value\"], \"\"))"
                },
                "x": {"scale": "concat_1_x", "field": "Value"},
                "y": {"scale": "concat_1_y", "field": "district", "band": 0.5}
              }
            }
          }
        ],
        "axes": [
          {
            "scale": "concat_1_x",
            "orient": "bottom",
            "gridScale": "concat_1_y",
            "grid": true,
            "tickCount": {"signal": "ceil(width/40)"},
            "domain": false,
            "labels": false,
            "aria": false,
            "maxExtent": 0,
            "minExtent": 0,
            "ticks": false,
            "zindex": 0
          },
          {
            "scale": "concat_1_x",
            "orient": "bottom",
            "grid": false,
            "labelFlush": true,
            "labelOverlap": true,
            "tickCount": {"signal": "ceil(width/40)"},
            "zindex": 0
          },
          {"scale": "concat_1_y", "orient": "left", "grid": false, "zindex": 0}
        ]
      }
    ],
    "scales": [
      {
        "name": "color",
        "type": "ordinal",
        "domain": {
          "fields": [
            {"data": "data_2", "field": "Round"},
            {"data": "data_3", "field": "Round"}
          ],
          "sort": true
        },
        "range": ["#2b2b2b", "#e90051"]
      },
      {
        "name": "concat_0_x",
        "type": "linear",
        "domain": [0, 100],
        "range": [0, {"signal": "width"}],
        "nice": true,
        "zero": true
      },
      {
        "name": "concat_0_y",
        "type": "linear",
        "domain": {"data": "data_2", "field": "density"},
        "range": [{"signal": "concat_0_height"}, 0],
        "nice": true,
        "zero": true
      },
      {
        "name": "concat_1_x",
        "type": "linear",
        "domain": [0, 100],
        "range": [0, {"signal": "width"}],
        "nice": true,
        "zero": true
      },
      {
        "name": "concat_1_y",
        "type": "band",
        "domain": {
          "fields": [
            {"data": "data_0", "field": "district"},
            {"data": "data_1", "field": "district"}
          ],
          "sort": {"op": "min", "field": "C_Prev_R2"}
        },
        "range": [0, {"signal": "concat_1_height"}],
        "paddingInner": 0.1,
        "paddingOuter": 0.05
      }
    ]
  },

  "TwoPointSpec": {
    "$schema": "https://vega.github.io/schema/vega/v5.json",
    "background": "white",
    "padding": 5,
    "width": 210,
    "data": [
      {"name": "input_data", "values": []},
      {
        "name": "data_0",
        "source": "input_data",
        "transform": [
          {"type": "formula", "expr": "datum.C_Prev_R1", "as": "R1"},
          {"type": "formula", "expr": "datum.C_Prev_R2", "as": "R2"}
        ]
      },
      {
        "name": "data_1",
        "source": "data_0",
        "transform": [
          {"type": "fold", "fields": ["R1", "R2"], "as": ["Round", "Value"]},
          {
            "type": "bin",
            "field": "Value",
            "as": [
              "bin_extent_0_40_step_2_5_Value",
              "bin_extent_0_40_step_2_5_Value_end"
            ],
            "signal": "concat_0_bin_extent_0_40_step_2_5_Value_bins",
            "extent": [0, 40],
            "step": 2.5
          }
        ]
      },
      {
        "name": "data_2",
        "source": "data_1",
        "transform": [
          {
            "type": "filter",
            "expr": "isValid(datum[\"Value\"]) && isFinite(+datum[\"Value\"])"
          }
        ]
      },
      {
        "name": "data_3",
        "source": "data_1",
        "transform": [
          {
            "type": "aggregate",
            "groupby": [
              "Round",
              "bin_extent_0_40_step_2_5_Value",
              "bin_extent_0_40_step_2_5_Value_end"
            ],
            "ops": ["count"],
            "fields": [null],
            "as": ["__count"]
          },
          {
            "type": "stack",
            "groupby": [
              "bin_extent_0_40_step_2_5_Value",
              "bin_extent_0_40_step_2_5_Value_end"
            ],
            "field": "__count",
            "sort": {"field": ["Round"], "order": ["descending"]},
            "as": ["__count_start", "__count_end"],
            "offset": "zero"
          },
          {
            "type": "filter",
            "expr": "isValid(datum[\"bin_extent_0_40_step_2_5_Value\"]) && isFinite(+datum[\"bin_extent_0_40_step_2_5_Value\"])"
          }
        ]
      },
      {
        "name": "data_4",
        "source": "data_0",
        "transform": [
          {
            "type": "filter",
            "expr": "isValid(datum[\"R1\"]) && isFinite(+datum[\"R1\"])"
          }
        ]
      }
    ],
    "signals": [
      {"name": "concat_0_height", "value": 50},
      {"name": "concat_1_height", "value": 300}
    ],
    "layout": {"padding": 20, "columns": 1, "bounds": "full", "align": "each"},
    "marks": [
      {
        "type": "group",
        "name": "concat_0_group",
        "style": "cell",
        "encode": {
          "update": {
            "width": {"signal": "width"},
            "height": {"signal": "concat_0_height"}
          }
        },
        "marks": [
          {
            "name": "concat_0_marks",
            "type": "rect",
            "style": ["bar"],
            "from": {"data": "data_3"},
            "encode": {
              "update": {
                "opacity": {"value": 0.7},
                "fill": {"scale": "color", "field": "Round"},
                "tooltip": {
                  "signal": "isValid(datum[\"Round\"]) ? datum[\"Round\"] : \"\"+datum[\"Round\"]"
                },
                "ariaRoleDescription": {"value": "bar"},
                "description": {
                  "signal": "\"Round: \" + (isValid(datum[\"Round\"]) ? datum[\"Round\"] : \"\"+datum[\"Round\"]) + \"; Value (binned): \" + (!isValid(datum[\"bin_extent_0_40_step_2_5_Value\"]) || !isFinite(+datum[\"bin_extent_0_40_step_2_5_Value\"]) ? \"null\" : format(datum[\"bin_extent_0_40_step_2_5_Value\"], \"\") + \" â€“ \" + format(datum[\"bin_extent_0_40_step_2_5_Value_end\"], \"\")) + \"; Count of Records: \" + (format(datum[\"__count\"], \"\"))"
                },
                "x2": [
                  {
                    "test": "!isValid(datum[\"bin_extent_0_40_step_2_5_Value\"]) || !isFinite(+datum[\"bin_extent_0_40_step_2_5_Value\"])",
                    "value": 0
                  },
                  {
                    "scale": "concat_0_x",
                    "field": "bin_extent_0_40_step_2_5_Value",
                    "offset": 1
                  }
                ],
                "x": [
                  {
                    "test": "!isValid(datum[\"bin_extent_0_40_step_2_5_Value\"]) || !isFinite(+datum[\"bin_extent_0_40_step_2_5_Value\"])",
                    "value": 0
                  },
                  {
                    "scale": "concat_0_x",
                    "field": "bin_extent_0_40_step_2_5_Value_end"
                  }
                ],
                "y": {"scale": "concat_0_y", "field": "__count_end"},
                "y2": {"scale": "concat_0_y", "field": "__count_start"}
              }
            }
          }
        ],
        "axes": [
          {
            "scale": "concat_0_y",
            "orient": "left",
            "gridScale": "concat_0_x",
            "grid": true,
            "tickCount": {"signal": "ceil(concat_0_height/40)"},
            "domain": false,
            "labels": false,
            "aria": false,
            "maxExtent": 0,
            "minExtent": 0,
            "ticks": false,
            "zindex": 0
          },
          {
            "scale": "concat_0_x",
            "orient": "bottom",
            "grid": false,
            "labelFlush": true,
            "labelOverlap": true,
            "tickCount": {"signal": "ceil(width/10)"},
            "zindex": 0
          },
          {
            "scale": "concat_0_y",
            "orient": "left",
            "grid": false,
            "labelOverlap": true,
            "tickCount": {"signal": "ceil(concat_0_height/40)"},
            "zindex": 0
          }
        ]
      },
      {
        "type": "group",
        "name": "concat_1_group",
        "style": "cell",
        "encode": {
          "update": {
            "width": {"signal": "width"},
            "height": {"signal": "concat_1_height"}
          }
        },
        "marks": [
          {
            "name": "concat_1_layer_0_marks",
            "type": "rect",
            "style": ["bar"],
            "from": {"data": "data_4"},
            "encode": {
              "update": {
                "fill": {
                  "value": {
                    "gradient": "linear",
                    "stops": [
                      {"color": "#2b2b2b", "offset": 0},
                      {"color": "#e90051", "offset": 1}
                    ],
                    "x1": 0,
                    "x2": 1,
                    "y1": 1,
                    "y2": 1
                  }
                },
                "tooltip": {
                  "signal": "{\"district\": isValid(datum[\"district\"]) ? datum[\"district\"] : \"\"+datum[\"district\"], \"R1\": format(datum[\"R1\"], \".0f\"), \"R2\": format(datum[\"R2\"], \".0f\")}"
                },
                "ariaRoleDescription": {"value": "bar"},
                "description": {
                  "signal": "\"district: \" + (isValid(datum[\"district\"]) ? datum[\"district\"] : \"\"+datum[\"district\"]) + \"; R1: \" + (format(datum[\"R1\"], \".0f\")) + \"; R2: \" + (format(datum[\"R2\"], \".0f\"))"
                },
                "x": {"scale": "concat_1_x", "field": "R1"},
                "x2": {"scale": "concat_1_x", "field": "R2"},
                "yc": {"scale": "concat_1_y", "field": "district", "band": 0.5},
                "height": {"value": 2}
              }
            }
          },
          {
            "name": "concat_1_layer_1_marks",
            "type": "symbol",
            "style": ["point"],
            "from": {"data": "data_2"},
            "encode": {
              "update": {
                "opacity": {"value": 1},
                "size": {"value": 100},
                "fill": {"scale": "color", "field": "Round"},
                "tooltip": {
                  "signal": "{\"district\": isValid(datum[\"district\"]) ? datum[\"district\"] : \"\"+datum[\"district\"], \"R1\": format(datum[\"R1\"], \".0f\"), \"R2\": format(datum[\"R2\"], \".0f\")}"
                },
                "ariaRoleDescription": {"value": "point"},
                "description": {
                  "signal": "\"Round: \" + (isValid(datum[\"Round\"]) ? datum[\"Round\"] : \"\"+datum[\"Round\"]) + \"; district: \" + (isValid(datum[\"district\"]) ? datum[\"district\"] : \"\"+datum[\"district\"]) + \"; R1: \" + (format(datum[\"R1\"], \".0f\")) + \"; R2: \" + (format(datum[\"R2\"], \".0f\")) + \"; Value: \" + (format(datum[\"Value\"], \"\"))"
                },
                "x": {"scale": "concat_1_x", "field": "Value"},
                "y": {"scale": "concat_1_y", "field": "district", "band": 0.5}
              }
            }
          }
        ],
        "axes": [
          {
            "scale": "concat_1_x",
            "orient": "bottom",
            "gridScale": "concat_1_y",
            "grid": true,
            "tickCount": {"signal": "ceil(width/40)"},
            "domain": false,
            "labels": false,
            "aria": false,
            "maxExtent": 0,
            "minExtent": 0,
            "ticks": false,
            "zindex": 0
          },
          {
            "scale": "concat_1_x",
            "orient": "bottom",
            "grid": false,
            "labelFlush": true,
            "labelOverlap": true,
            "tickCount": {"signal": "ceil(width/40)"},
            "zindex": 0
          },
          {"scale": "concat_1_y", "orient": "left", "grid": false, "zindex": 0}
        ]
      }
    ],
    "scales": [
      {
        "name": "color",
        "type": "ordinal",
        "domain": {
          "fields": [
            {"data": "data_3", "field": "Round"},
            {"data": "data_2", "field": "Round"}
          ],
          "sort": true
        },
        "range": ["#2b2b2b", "#e90051"]
      },
      {
        "name": "concat_0_x",
        "type": "linear",
        "domain": [0, 40],
        "range": [0, {"signal": "width"}],
        "bins": {"signal": "concat_0_bin_extent_0_40_step_2_5_Value_bins"},
        "zero": false
      },
      {
        "name": "concat_0_y",
        "type": "linear",
        "domain": {"data": "data_3", "fields": ["__count_start", "__count_end"]},
        "range": [{"signal": "concat_0_height"}, 0],
        "nice": true,
        "zero": false
      },
      {
        "name": "concat_1_x",
        "type": "linear",
        "domain": [0, 40],
        "range": [0, {"signal": "width"}],
        "nice": true,
        "zero": false
      },
      {
        "name": "concat_1_y",
        "type": "band",
        "domain": {
          "fields": [
            {"data": "data_0", "field": "district"},
            {"data": "data_1", "field": "district"}
          ],
          "sort": {"op": "min", "field": "C_Prev_R2"}
        },
        "range": [0, {"signal": "concat_1_height"}],
        "paddingInner": 0.1,
        "paddingOuter": 0.05
      }
    ]
  }
}
